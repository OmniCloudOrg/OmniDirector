{
    "name": "ovh_cloud",
    "type": "command",
    "default_settings": {
      "region": "GRA7",
      "flavor": "d2-2",
      "image": "Ubuntu 22.04",
      "ssh_key": "",
      "network": "Ext-Net",
      "monthly_billing": "false",
      "project_id": ""
    },
    "actions": {
      "test_install": {
        "command": "openstack --version",
        "params": [],
        "parse_rules": {
          "type": "object",
          "patterns": {
            "version": {
              "regex": "openstack ([\\d\\.]+)",
              "group": 1
            }
          }
        }
      },
      "list_workers": {
        "command": "openstack server list -f json",
        "params": [],
        "parse_rules": {
          "type": "array",
          "separator": "\\},\\{",
          "patterns": {
            "id": {
              "regex": "\"ID\":\\s*\"([^\"]+)\"",
              "group": 1
            },
            "name": {
              "regex": "\"Name\":\\s*\"([^\"]+)\"",
              "group": 1
            },
            "status": {
              "regex": "\"Status\":\\s*\"([^\"]+)\"",
              "group": 1
            },
            "ip_addresses": {
              "regex": "\"Networks\":\\s*\"([^\"]+)\"",
              "group": 1
            },
            "flavor": {
              "regex": "\"Flavor\":\\s*\"([^\"]+)\"",
              "group": 1
            },
            "image": {
              "regex": "\"Image\":\\s*\"([^\"]+)\"",
              "group": 1,
              "optional": true
            }
          }
        }
      },
      "get_worker": {
        "command": "openstack server show -f json {server_id}",
        "params": [
          "server_id"
        ],
        "parse_rules": {
          "type": "properties",
          "patterns": {
            "id": {
              "regex": "\"id\":\\s*\"([^\"]+)\"",
              "group": 1
            },
            "name": {
              "regex": "\"name\":\\s*\"([^\"]+)\"",
              "group": 1
            },
            "status": {
              "regex": "\"status\":\\s*\"([^\"]+)\"",
              "group": 1
            },
            "flavor": {
              "regex": "\"flavor\":\\s*\\{[^}]*\"original_name\":\\s*\"([^\"]+)\"",
              "group": 1
            },
            "image": {
              "regex": "\"image\":\\s*\\{[^}]*\"id\":\\s*\"([^\"]+)\"",
              "group": 1,
              "optional": true
            },
            "created": {
              "regex": "\"created\":\\s*\"([^\"]+)\"",
              "group": 1
            },
            "addresses": {
              "regex": "\"addresses\":\\s*\\{[^}]*\"([^\"]+)\"",
              "group": 1
            },
            "key_name": {
              "regex": "\"key_name\":\\s*\"([^\"]+)\"",
              "group": 1,
              "optional": true
            }
          }
        }
      },
      "create_worker": {
        "command": "openstack server create --flavor {flavor} --image {image} --network {network} {ssh_key_param} {project_param} --wait {name}",
        "params": [
          "flavor",
          "image",
          "network",
          "ssh_key_param",
          "project_param",
          "name"
        ],
        "parse_rules": {
          "type": "properties",
          "patterns": {
            "id": {
              "regex": "\\| id\\s+\\| ([a-f0-9-]+)",
              "group": 1
            },
            "name": {
              "regex": "\\| name\\s+\\| ([^\\|]+)",
              "group": 1
            },
            "status": {
              "regex": "\\| status\\s+\\| ([^\\|]+)",
              "group": 1
            },
            "addresses": {
              "regex": "\\| addresses\\s+\\| ([^\\|]+)",
              "group": 1
            },
            "flavor": {
              "regex": "\\| flavor\\s+\\| ([^\\|]+)",
              "group": 1
            }
          }
        }
      },
      "delete_worker": {
        "command": "openstack server delete --wait {server_id}",
        "params": [
          "server_id"
        ],
        "parse_rules": {
          "type": "object",
          "patterns": {
            "success": {
              "regex": ".*",
              "transform": "boolean"
            }
          }
        }
      },
      "start_worker": {
        "command": "openstack server start {server_id}",
        "params": [
          "server_id"
        ],
        "parse_rules": {
          "type": "object",
          "patterns": {
            "success": {
              "regex": ".*",
              "transform": "boolean"
            }
          }
        }
      },
      "stop_worker": {
        "command": "openstack server stop {server_id}",
        "params": [
          "server_id"
        ],
        "parse_rules": {
          "type": "object",
          "patterns": {
            "success": {
              "regex": ".*",
              "transform": "boolean"
            }
          }
        }
      },
      "reboot_worker": {
        "command": "openstack server reboot --wait {server_id}",
        "params": [
          "server_id"
        ],
        "parse_rules": {
          "type": "object",
          "patterns": {
            "success": {
              "regex": ".*",
              "transform": "boolean"
            }
          }
        }
      },
      "resize_worker": {
        "command": "openstack server resize --flavor {flavor} --wait {server_id}",
        "params": [
          "flavor",
          "server_id"
        ],
        "parse_rules": {
          "type": "object",
          "patterns": {
            "success": {
              "regex": ".*",
              "transform": "boolean"
            }
          }
        }
      },
      "confirm_resize": {
        "command": "openstack server resize --confirm {server_id}",
        "params": [
          "server_id"
        ],
        "parse_rules": {
          "type": "object",
          "patterns": {
            "success": {
              "regex": ".*",
              "transform": "boolean"
            }
          }
        }
      },
      "revert_resize": {
        "command": "openstack server resize --revert {server_id}",
        "params": [
          "server_id"
        ],
        "parse_rules": {
          "type": "object",
          "patterns": {
            "success": {
              "regex": ".*",
              "transform": "boolean"
            }
          }
        }
      },
      "list_flavors": {
        "command": "openstack flavor list -f json",
        "params": [],
        "parse_rules": {
          "type": "array",
          "separator": "\\},\\{",
          "patterns": {
            "id": {
              "regex": "\"ID\":\\s*\"([^\"]+)\"",
              "group": 1
            },
            "name": {
              "regex": "\"Name\":\\s*\"([^\"]+)\"",
              "group": 1
            },
            "ram": {
              "regex": "\"RAM\":\\s*(\\d+)",
              "group": 1,
              "transform": "number"
            },
            "disk": {
              "regex": "\"Disk\":\\s*(\\d+)",
              "group": 1,
              "transform": "number"
            },
            "vcpus": {
              "regex": "\"VCPUs\":\\s*(\\d+)",
              "group": 1,
              "transform": "number"
            }
          }
        }
      },
      "list_images": {
        "command": "openstack image list -f json",
        "params": [],
        "parse_rules": {
          "type": "array",
          "separator": "\\},\\{",
          "patterns": {
            "id": {
              "regex": "\"ID\":\\s*\"([^\"]+)\"",
              "group": 1
            },
            "name": {
              "regex": "\"Name\":\\s*\"([^\"]+)\"",
              "group": 1
            },
            "status": {
              "regex": "\"Status\":\\s*\"([^\"]+)\"",
              "group": 1
            },
            "size": {
              "regex": "\"Size\":\\s*(\\d+)",
              "group": 1,
              "transform": "number",
              "optional": true
            }
          }
        }
      },
      "create_volume": {
        "command": "openstack volume create --size {size_gb} --description {description} {name}",
        "params": [
          "size_gb",
          "description",
          "name"
        ],
        "parse_rules": {
          "type": "properties",
          "patterns": {
            "id": {
              "regex": "\\| id\\s+\\| ([a-f0-9-]+)",
              "group": 1
            },
            "name": {
              "regex": "\\| name\\s+\\| ([^\\|]+)",
              "group": 1
            },
            "size": {
              "regex": "\\| size\\s+\\| (\\d+)",
              "group": 1,
              "transform": "number"
            },
            "status": {
              "regex": "\\| status\\s+\\| ([^\\|]+)",
              "group": 1
            }
          }
        }
      },
      "list_volumes": {
        "command": "openstack volume list -f json",
        "params": [],
        "parse_rules": {
          "type": "array",
          "separator": "\\},\\{",
          "patterns": {
            "id": {
              "regex": "\"ID\":\\s*\"([^\"]+)\"",
              "group": 1
            },
            "name": {
              "regex": "\"Name\":\\s*\"([^\"]+)\"",
              "group": 1
            },
            "status": {
              "regex": "\"Status\":\\s*\"([^\"]+)\"",
              "group": 1
            },
            "size": {
              "regex": "\"Size\":\\s*(\\d+)",
              "group": 1,
              "transform": "number"
            },
            "attached_to": {
              "regex": "\"Attached to\":\\s*\"([^\"]+)\"",
              "group": 1,
              "optional": true
            }
          }
        }
      },
      "attach_volume": {
        "command": "openstack server add volume {server_id} {volume_id}",
        "params": [
          "server_id",
          "volume_id"
        ],
        "parse_rules": {
          "type": "object",
          "patterns": {
            "success": {
              "regex": ".*",
              "transform": "boolean"
            }
          }
        }
      },
      "detach_volume": {
        "command": "openstack server remove volume {server_id} {volume_id}",
        "params": [
          "server_id",
          "volume_id"
        ],
        "parse_rules": {
          "type": "object",
          "patterns": {
            "success": {
              "regex": ".*",
              "transform": "boolean"
            }
          }
        }
      },
      "delete_volume": {
        "command": "openstack volume delete {volume_id}",
        "params": [
          "volume_id"
        ],
        "parse_rules": {
          "type": "object",
          "patterns": {
            "success": {
              "regex": ".*",
              "transform": "boolean"
            }
          }
        }
      },
      "create_snapshot": {
        "command": "openstack snapshot create --name {name} {volume_id}",
        "params": [
          "name",
          "volume_id"
        ],
        "parse_rules": {
          "type": "properties",
          "patterns": {
            "id": {
              "regex": "\\| id\\s+\\| ([a-f0-9-]+)",
              "group": 1
            },
            "name": {
              "regex": "\\| name\\s+\\| ([^\\|]+)",
              "group": 1
            },
            "status": {
              "regex": "\\| status\\s+\\| ([^\\|]+)",
              "group": 1
            },
            "size": {
              "regex": "\\| size\\s+\\| (\\d+)",
              "group": 1,
              "transform": "number"
            }
          }
        }
      },
      "list_snapshots": {
        "command": "openstack snapshot list -f json",
        "params": [],
        "parse_rules": {
          "type": "array",
          "separator": "\\},\\{",
          "patterns": {
            "id": {
              "regex": "\"ID\":\\s*\"([^\"]+)\"",
              "group": 1
            },
            "name": {
              "regex": "\"Name\":\\s*\"([^\"]+)\"",
              "group": 1
            },
            "status": {
              "regex": "\"Status\":\\s*\"([^\"]+)\"",
              "group": 1
            },
            "size": {
              "regex": "\"Size\":\\s*(\\d+)",
              "group": 1,
              "transform": "number"
            }
          }
        }
      },
      "delete_snapshot": {
        "command": "openstack snapshot delete {snapshot_id}",
        "params": [
          "snapshot_id"
        ],
        "parse_rules": {
          "type": "object",
          "patterns": {
            "success": {
              "regex": ".*",
              "transform": "boolean"
            }
          }
        }
      },
      "create_ssh_key": {
        "command": "openstack keypair create --public-key {public_key_file} {key_name}",
        "params": [
          "public_key_file",
          "key_name"
        ],
        "parse_rules": {
          "type": "properties",
          "patterns": {
            "name": {
              "regex": "\\| name\\s+\\| ([^\\|]+)",
              "group": 1
            },
            "fingerprint": {
              "regex": "\\| fingerprint\\s+\\| ([^\\|]+)",
              "group": 1
            },
            "type": {
              "regex": "\\| type\\s+\\| ([^\\|]+)",
              "group": 1
            }
          }
        }
      },
      "list_ssh_keys": {
        "command": "openstack keypair list -f json",
        "params": [],
        "parse_rules": {
          "type": "array",
          "separator": "\\},\\{",
          "patterns": {
            "name": {
              "regex": "\"Name\":\\s*\"([^\"]+)\"",
              "group": 1
            },
            "fingerprint": {
              "regex": "\"Fingerprint\":\\s*\"([^\"]+)\"",
              "group": 1
            },
            "type": {
              "regex": "\"Type\":\\s*\"([^\"]+)\"",
              "group": 1
            }
          }
        }
      },
      "delete_ssh_key": {
        "command": "openstack keypair delete {key_name}",
        "params": [
          "key_name"
        ],
        "parse_rules": {
          "type": "object",
          "patterns": {
            "success": {
              "regex": ".*",
              "transform": "boolean"
            }
          }
        }
      },
      "list_regions": {
        "command": "openstack region list -f json",
        "params": [],
        "parse_rules": {
          "type": "array",
          "separator": "\\},\\{",
          "patterns": {
            "region": {
              "regex": "\"Region\":\\s*\"([^\"]+)\"",
              "group": 1
            },
            "description": {
              "regex": "\"Description\":\\s*\"([^\"]+)\"",
              "group": 1,
              "optional": true
            }
          }
        }
      }
    }
  }