{
  "name": "ec2",
  "type": "command",
  "default_settings": {
    "region": "us-east-1",
    "instance_type": "t2.micro",
    "image_id": "ami-0c55b159cbfafe1f0",
    "ssh_key_name": "default-key",
    "security_group": "default",
    "volume_type": "gp2"
  },
  "actions": {
    "test_install": {
      "target": {
        "Command": {
          "command": "aws --version",
          "in_vm": false
        }
      },
      "params": [],
      "parse_rules": {
        "type": "object",
        "patterns": {
          "version": {
            "regex": "aws-cli\\/([\\d\\.]+)",
            "group": 1
          }
        }
      }
    },
    "list_workers": {
      "target": {
        "Command": {
          "command": "aws ec2 describe-instances --region {region} --output json",
          "in_vm": false
        }
      },
      "params": [
        "region"
      ],
      "parse_rules": {
        "type": "object",
        "patterns": {
          "output": {
            "regex": "(.*)",
            "group": 1
          }
        }
      }
    },
    "create_worker": {
      "target": {
        "Command": {
          "command": "aws ec2 run-instances --region {region} --image-id {image_id} --instance-type {instance_type} --key-name {ssh_key_name} --security-group-ids {security_group} --output json",
          "in_vm": false
        }
      },
      "params": [
        "region",
        "image_id",
        "instance_type",
        "ssh_key_name",
        "security_group"
      ],
      "parse_rules": {
        "type": "object",
        "patterns": {
          "instance_id": {
            "regex": "\"InstanceId\":\\s*\"([^\"]+)\"",
            "group": 1
          }
        }
      }
    },
    "terminate_worker": {
      "target": {
        "Command": {
          "command": "aws ec2 terminate-instances --region {region} --instance-ids {instance_id} --output json",
          "in_vm": false
        }
      },
      "params": [
        "region",
        "instance_id"
      ],
      "parse_rules": {
        "type": "object",
        "patterns": {
          "success": {
            "regex": ".*",
            "transform": "boolean"
          }
        }
      }
    },
    "start_worker": {
      "target": {
        "Command": {
          "command": "aws ec2 start-instances --region {region} --instance-ids {instance_id} --output json",
          "in_vm": false
        }
      },
      "params": [
        "region",
        "instance_id"
      ],
      "parse_rules": {
        "type": "object",
        "patterns": {
          "success": {
            "regex": ".*",
            "transform": "boolean"
          }
        }
      }
    },
    "stop_worker": {
      "target": {
        "Command": {
          "command": "aws ec2 stop-instances --region {region} --instance-ids {instance_id} --output json",
          "in_vm": false
        }
      },
      "params": [
        "region",
        "instance_id"
      ],
      "parse_rules": {
        "type": "object",
        "patterns": {
          "success": {
            "regex": ".*",
            "transform": "boolean"
          }
        }
      }
    },
    "get_worker": {
      "target": {
        "Command": {
          "command": "aws ec2 describe-instances --region {region} --instance-ids {instance_id} --output json",
          "in_vm": false
        }
      },
      "params": [
        "region",
        "instance_id"
      ],
      "parse_rules": {
        "type": "properties",
        "patterns": {
          "state": {
            "regex": "\"State\":\\s*\\{[^\\}]*\"Name\":\\s*\"([^\"]+)\"",
            "group": 1
          },
          "public_ip": {
            "regex": "\"PublicIpAddress\":\\s*\"([^\"]+)\"",
            "group": 1,
            "optional": true
          },
          "private_ip": {
            "regex": "\"PrivateIpAddress\":\\s*\"([^\"]+)\"",
            "group": 1
          },
          "instance_type": {
            "regex": "\"InstanceType\":\\s*\"([^\"]+)\"",
            "group": 1
          },
          "image_id": {
            "regex": "\"ImageId\":\\s*\"([^\"]+)\"",
            "group": 1
          }
        }
      }
    },
    "create_volume": {
      "target": {
        "Command": {
          "command": "aws ec2 create-volume --region {region} --availability-zone {availability_zone} --size {size_gb} --volume-type {volume_type} --output json",
          "in_vm": false
        }
      },
      "params": [
        "region",
        "availability_zone",
        "size_gb",
        "volume_type"
      ],
      "parse_rules": {
        "type": "object",
        "patterns": {
          "volume_id": {
            "regex": "\"VolumeId\":\\s*\"([^\"]+)\"",
            "group": 1
          }
        }
      }
    },
    "attach_volume": {
      "target": {
        "Command": {
          "command": "aws ec2 attach-volume --region {region} --volume-id {volume_id} --instance-id {instance_id} --device {device} --output json",
          "in_vm": false
        }
      },
      "params": [
        "region",
        "volume_id",
        "instance_id",
        "device"
      ],
      "parse_rules": {
        "type": "object",
        "patterns": {
          "success": {
            "regex": ".*",
            "transform": "boolean"
          }
        }
      }
    },
    "detach_volume": {
      "target": {
        "Command": {
          "command": "aws ec2 detach-volume --region {region} --volume-id {volume_id} --output json",
          "in_vm": false
        }
      },
      "params": [
        "region",
        "volume_id"
      ],
      "parse_rules": {
        "type": "object",
        "patterns": {
          "success": {
            "regex": ".*",
            "transform": "boolean"
          }
        }
      }
    },
    "list_volumes": {
      "target": {
        "Command": {
          "command": "aws ec2 describe-volumes --region {region} --output json",
          "in_vm": false
        }
      },
      "params": [
        "region"
      ],
      "parse_rules": {
        "type": "array",
        "separator": "\"VolumeId\"",
        "patterns": {
          "volume_id": {
            "regex": "\"VolumeId\":\\s*\"([^\"]+)\"",
            "group": 1
          },
          "size": {
            "regex": "\"Size\":\\s*(\\d+)",
            "group": 1,
            "transform": "number"
          },
          "state": {
            "regex": "\"State\":\\s*\"([^\"]+)\"",
            "group": 1
          },
          "type": {
            "regex": "\"VolumeType\":\\s*\"([^\"]+)\"",
            "group": 1
          }
        }
      }
    },
    "has_volume": {
      "target": {
        "Command": {
          "command": "aws ec2 describe-volumes --region {region} --volume-ids {volume_id} --output json",
          "in_vm": false
        }
      },
      "params": [
        "region",
        "volume_id"
      ],
      "parse_rules": {
        "type": "object",
        "patterns": {
          "exists": {
            "regex": "\"Volumes\"",
            "transform": "boolean"
          }
        }
      }
    },
    "create_snapshot": {
      "target": {
        "Command": {
          "command": "aws ec2 create-snapshot --region {region} --volume-id {volume_id} --description {description} --output json",
          "in_vm": false
        }
      },
      "params": [
        "region",
        "volume_id",
        "description"
      ],
      "parse_rules": {
        "type": "object",
        "patterns": {
          "snapshot_id": {
            "regex": "\"SnapshotId\":\\s*\"([^\"]+)\"",
            "group": 1
          }
        }
      }
    },
    "delete_snapshot": {
      "target": {
        "Command": {
          "command": "aws ec2 delete-snapshot --region {region} --snapshot-id {snapshot_id} --output json",
          "in_vm": false
        }
      },
      "params": [
        "region",
        "snapshot_id"
      ],
      "parse_rules": {
        "type": "object",
        "patterns": {
          "success": {
            "regex": ".*",
            "transform": "boolean"
          }
        }
      }
    },
    "list_snapshots": {
      "target": {
        "Command": {
          "command": "aws ec2 describe-snapshots --region {region} --owner-ids self --output json",
          "in_vm": false
        }
      },
      "params": [
        "region"
      ],
      "parse_rules": {
        "type": "array",
        "separator": "\"SnapshotId\"",
        "patterns": {
          "snapshot_id": {
            "regex": "\"SnapshotId\":\\s*\"([^\"]+)\"",
            "group": 1
          },
          "volume_id": {
            "regex": "\"VolumeId\":\\s*\"([^\"]+)\"",
            "group": 1
          },
          "state": {
            "regex": "\"State\":\\s*\"([^\"]+)\"",
            "group": 1
          },
          "progress": {
            "regex": "\"Progress\":\\s*\"([^\"]+)\"",
            "group": 1
          }
        }
      }
    },
    "list_regions": {
      "target": {
        "Command": {
          "command": "aws ec2 describe-regions --output json",
          "in_vm": false
        }
      },
      "params": [],
      "parse_rules": {
        "type": "array",
        "separator": "\"RegionName\"",
        "patterns": {
          "name": {
            "regex": "\"RegionName\":\\s*\"([^\"]+)\"",
            "group": 1
          },
          "endpoint": {
            "regex": "\"Endpoint\":\\s*\"([^\"]+)\"",
            "group": 1
          }
        }
      }
    }
  }
}