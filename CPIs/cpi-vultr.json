{
  "name": "vultr",
  "type": "command",
  "default_settings": {
    "region": "ewr",
    "plan": "vc2-1c-1gb",
    "os_id": "387",
    "label": "vultr-server",
    "tag": "",
    "hostname": "",
    "enable_ipv6": "true",
    "ssh_key_ids": ""
  },
  "actions": {
    "test_install": {
      "target": {
        "Command": "vultr-cli version"
      },
      "params": [],
      "parse_rules": {
        "type": "object",
        "patterns": {
          "version": {
            "regex": "([\\d\\.]+)",
            "group": 1
          }
        }
      }
    },
    "list_workers": {
      "target": {
        "Command": "vultr-cli instance list"
      },
      "params": [],
      "parse_rules": {
        "type": "array",
        "separator": "\\n",
        "patterns": {
          "id": {
            "regex": "^([a-f0-9-]+)\\s+",
            "group": 1
          },
          "hostname": {
            "regex": "^[a-f0-9-]+\\s+([^\\s]+)\\s+",
            "group": 1
          },
          "os": {
            "regex": "^[a-f0-9-]+\\s+[^\\s]+\\s+([^\\s]+(?:\\s+[^\\s]+)*)\\s+",
            "group": 1
          },
          "main_ip": {
            "regex": "^[a-f0-9-]+\\s+[^\\s]+\\s+[^\\s]+(?:\\s+[^\\s]+)*\\s+([0-9\\.]+)\\s+",
            "group": 1
          },
          "vcpu_count": {
            "regex": "^[a-f0-9-]+\\s+[^\\s]+\\s+[^\\s]+(?:\\s+[^\\s]+)*\\s+[0-9\\.]+\\s+(\\d+)\\s+",
            "group": 1,
            "transform": "number"
          },
          "ram_mb": {
            "regex": "^[a-f0-9-]+\\s+[^\\s]+\\s+[^\\s]+(?:\\s+[^\\s]+)*\\s+[0-9\\.]+\\s+\\d+\\s+(\\d+)\\s+",
            "group": 1,
            "transform": "number"
          },
          "disk_gb": {
            "regex": "^[a-f0-9-]+\\s+[^\\s]+\\s+[^\\s]+(?:\\s+[^\\s]+)*\\s+[0-9\\.]+\\s+\\d+\\s+\\d+\\s+(\\d+)\\s+",
            "group": 1,
            "transform": "number"
          },
          "region": {
            "regex": "^[a-f0-9-]+\\s+[^\\s]+\\s+[^\\s]+(?:\\s+[^\\s]+)*\\s+[0-9\\.]+\\s+\\d+\\s+\\d+\\s+\\d+\\s+([^\\s]+)\\s+",
            "group": 1
          },
          "status": {
            "regex": "^[a-f0-9-]+\\s+[^\\s]+\\s+[^\\s]+(?:\\s+[^\\s]+)*\\s+[0-9\\.]+\\s+\\d+\\s+\\d+\\s+\\d+\\s+[^\\s]+\\s+([^\\s]+)",
            "group": 1
          }
        }
      }
    },
    "create_worker": {
      "target": {
        "Command": "vultr-cli instance create --region {region} --plan {plan} --os {os_id} --label {label} {hostname_param} {ipv6_param} {ssh_keys_param} {tag_param}"
      },
      "params": [
        "region",
        "plan",
        "os_id",
        "label",
        "hostname_param",
        "ipv6_param",
        "ssh_keys_param",
        "tag_param"
      ],
      "parse_rules": {
        "type": "properties",
        "patterns": {
          "id": {
            "regex": "ID\\s+([a-f0-9-]+)",
            "group": 1
          },
          "os": {
            "regex": "OS\\s+([^\\n]+)",
            "group": 1
          },
          "ram": {
            "regex": "RAM\\s+(\\d+)",
            "group": 1,
            "transform": "number"
          },
          "disk": {
            "regex": "DISK\\s+(\\d+)",
            "group": 1,
            "transform": "number"
          },
          "main_ip": {
            "regex": "MAIN IP\\s+([0-9\\.]+)",
            "group": 1
          },
          "status": {
            "regex": "STATUS\\s+([^\\n]+)",
            "group": 1
          }
        }
      }
    },
    "get_worker": {
      "target": {
        "Command": "vultr-cli instance get {instance_id}"
      },
      "params": [
        "instance_id"
      ],
      "parse_rules": {
        "type": "properties",
        "patterns": {
          "id": {
            "regex": "ID\\s+([a-f0-9-]+)",
            "group": 1
          },
          "os": {
            "regex": "OS\\s+([^\\n]+)",
            "group": 1
          },
          "ram": {
            "regex": "RAM\\s+(\\d+)",
            "group": 1,
            "transform": "number"
          },
          "disk": {
            "regex": "DISK\\s+(\\d+)",
            "group": 1,
            "transform": "number"
          },
          "main_ip": {
            "regex": "MAIN IP\\s+([0-9\\.]+)",
            "group": 1
          },
          "vcpu_count": {
            "regex": "CPU COUNT\\s+(\\d+)",
            "group": 1,
            "transform": "number"
          },
          "region": {
            "regex": "REGION\\s+([^\\n]+)",
            "group": 1
          },
          "status": {
            "regex": "STATUS\\s+([^\\n]+)",
            "group": 1
          },
          "date_created": {
            "regex": "DATE CREATED\\s+([^\\n]+)",
            "group": 1
          },
          "tag": {
            "regex": "TAG\\s+([^\\n]+)",
            "group": 1,
            "optional": true
          }
        }
      }
    },
    "delete_worker": {
      "target": {
        "Command": "vultr-cli instance delete {instance_id}"
      },
      "params": [
        "instance_id"
      ],
      "parse_rules": {
        "type": "object",
        "patterns": {
          "success": {
            "regex": ".*",
            "transform": "boolean"
          }
        }
      }
    },
    "start_worker": {
      "target": {
        "Command": "vultr-cli instance start {instance_id}"
      },
      "params": [
        "instance_id"
      ],
      "parse_rules": {
        "type": "object",
        "patterns": {
          "success": {
            "regex": ".*",
            "transform": "boolean"
          }
        }
      }
    },
    "stop_worker": {
      "target": {
        "Command": "vultr-cli instance stop {instance_id}"
      },
      "params": [
        "instance_id"
      ],
      "parse_rules": {
        "type": "object",
        "patterns": {
          "success": {
            "regex": ".*",
            "transform": "boolean"
          }
        }
      }
    },
    "reboot_worker": {
      "target": {
        "Command": "vultr-cli instance reboot {instance_id}"
      },
      "params": [
        "instance_id"
      ],
      "parse_rules": {
        "type": "object",
        "patterns": {
          "success": {
            "regex": ".*",
            "transform": "boolean"
          }
        }
      }
    },
    "reinstall_worker": {
      "target": {
        "Command": "vultr-cli instance reinstall {instance_id} {hostname_param}"
      },
      "params": [
        "instance_id",
        "hostname_param"
      ],
      "parse_rules": {
        "type": "object",
        "patterns": {
          "success": {
            "regex": ".*",
            "transform": "boolean"
          }
        }
      }
    },
    "list_regions": {
      "target": {
        "Command": "vultr-cli regions list"
      },
      "params": [],
      "parse_rules": {
        "type": "array",
        "separator": "\\n",
        "patterns": {
          "id": {
            "regex": "^([^\\s]+)\\s+",
            "group": 1
          },
          "city": {
            "regex": "^[^\\s]+\\s+([^\\s]+(?:\\s+[^\\s]+)*)\\s+",
            "group": 1
          },
          "country": {
            "regex": "^[^\\s]+\\s+[^\\s]+(?:\\s+[^\\s]+)*\\s+([^\\s]+(?:\\s+[^\\s]+)*)\\s+",
            "group": 1
          },
          "continent": {
            "regex": "^[^\\s]+\\s+[^\\s]+(?:\\s+[^\\s]+)*\\s+[^\\s]+(?:\\s+[^\\s]+)*\\s+([^\\s]+)",
            "group": 1
          }
        }
      }
    },
    "list_plans": {
      "target": {
        "Command": "vultr-cli plans list --type vc2"
      },
      "params": [],
      "parse_rules": {
        "type": "array",
        "separator": "\\n",
        "patterns": {
          "id": {
            "regex": "^([^\\s]+)\\s+",
            "group": 1
          },
          "vcpu_count": {
            "regex": "^[^\\s]+\\s+(\\d+)\\s+",
            "group": 1,
            "transform": "number"
          },
          "ram": {
            "regex": "^[^\\s]+\\s+\\d+\\s+(\\d+)\\s+",
            "group": 1,
            "transform": "number"
          },
          "disk": {
            "regex": "^[^\\s]+\\s+\\d+\\s+\\d+\\s+(\\d+)\\s+",
            "group": 1,
            "transform": "number"
          },
          "bandwidth": {
            "regex": "^[^\\s]+\\s+\\d+\\s+\\d+\\s+\\d+\\s+(\\d+)\\s+",
            "group": 1,
            "transform": "number"
          },
          "monthly_cost": {
            "regex": "^[^\\s]+\\s+\\d+\\s+\\d+\\s+\\d+\\s+\\d+\\s+([\\d\\.]+)",
            "group": 1,
            "transform": "number"
          }
        }
      }
    },
    "list_os": {
      "target": {
        "Command": "vultr-cli os list"
      },
      "params": [],
      "parse_rules": {
        "type": "array",
        "separator": "\\n",
        "patterns": {
          "id": {
            "regex": "^(\\d+)\\s+",
            "group": 1,
            "transform": "number"
          },
          "name": {
            "regex": "^\\d+\\s+([^\\s].+?)\\s+(?:yes|no)$",
            "group": 1
          },
          "arch": {
            "regex": "^\\d+\\s+[^\\s].+?\\s+(yes|no)$",
            "group": 1
          }
        }
      }
    },
    "list_ssh_keys": {
      "target": {
        "Command": "vultr-cli ssh-key list"
      },
      "params": [],
      "parse_rules": {
        "type": "array",
        "separator": "\\n",
        "patterns": {
          "id": {
            "regex": "^([a-f0-9-]+)\\s+",
            "group": 1
          },
          "name": {
            "regex": "^[a-f0-9-]+\\s+([^\\s]+)\\s+",
            "group": 1
          },
          "date_created": {
            "regex": "^[a-f0-9-]+\\s+[^\\s]+\\s+(.+)",
            "group": 1
          }
        }
      }
    },
    "create_ssh_key": {
      "target": {
        "Command": "vultr-cli ssh-key create --name {key_name} --key \"}{ssh_key}\""
      },
        "params": [
          "key_name",
          "ssh_key"
        ],
        "parse_rules": {
          "type": "properties",
          "patterns": {
            "id": {
              "regex": "ID\\s+([a-f0-9-]+)",
              "group": 1
            },
            "name": {
              "regex": "NAME\\s+([^\\n]+)",
              "group": 1
            },
            "date_created": {
              "regex": "DATE CREATED\\s+([^\\n]+)",
              "group": 1
            }
          }
        }
      },
      "delete_ssh_key": {
        "target": {
          "Command": "vultr-cli ssh-key delete {key_id}"
        },
        "params": [
          "key_id"
        ],
        "parse_rules": {
          "type": "object",
          "patterns": {
            "success": {
              "regex": ".*",
              "transform": "boolean"
            }
          }
        }
      },
      "create_snapshot": {
        "target": {
          "Command": "vultr-cli snapshot create --instance-id {instance_id} --description {description}"
        },
        "params": [
          "instance_id",
          "description"
        ],
        "parse_rules": {
          "type": "properties",
          "patterns": {
            "id": {
              "regex": "ID\\s+([a-f0-9-]+)",
              "group": 1
            },
            "description": {
              "regex": "DESCRIPTION\\s+([^\\n]+)",
              "group": 1
            },
            "date_created": {
              "regex": "DATE CREATED\\s+([^\\n]+)",
              "group": 1
            },
            "size": {
              "regex": "SIZE\\s+(\\d+)",
              "group": 1,
              "transform": "number"
            },
            "status": {
              "regex": "STATUS\\s+([^\\n]+)",
              "group": 1
            }
          }
        }
      },
      "list_snapshots": {
        "target": {
          "Command": "vultr-cli snapshot list"
        },
        "params": [],
        "parse_rules": {
          "type": "array",
          "separator": "\\n",
          "patterns": {
            "id": {
              "regex": "^([a-f0-9-]+)\\s+",
              "group": 1
            },
            "date_created": {
              "regex": "^[a-f0-9-]+\\s+([^\\s]+\\s+[^\\s]+)\\s+",
              "group": 1
            },
            "size": {
              "regex": "^[a-f0-9-]+\\s+[^\\s]+\\s+[^\\s]+\\s+(\\d+)\\s+",
              "group": 1,
              "transform": "number"
            },
            "status": {
              "regex": "^[a-f0-9-]+\\s+[^\\s]+\\s+[^\\s]+\\s+\\d+\\s+([^\\s]+)\\s+",
              "group": 1
            },
            "description": {
              "regex": "^[a-f0-9-]+\\s+[^\\s]+\\s+[^\\s]+\\s+\\d+\\s+[^\\s]+\\s+(.+)$",
              "group": 1
            }
          }
        }
      },
      "delete_snapshot": {
        "target": {
          "Command": "vultr-cli snapshot delete {snapshot_id}"
        },
        "params": [
          "snapshot_id"
        ],
        "parse_rules": {
          "type": "object",
          "patterns": {
            "success": {
              "regex": ".*",
              "transform": "boolean"
            }
          }
        }
      },
      "create_block_volume": {
        "target": {
          "Command": "vultr-cli block-storage create --region {region} --size {size_gb} {label_param}"
        },
        "params": [
          "region",
          "size_gb",
          "label_param"
        ],
        "parse_rules": {
          "type": "properties",
          "patterns": {
            "id": {
              "regex": "ID\\s+([a-f0-9-]+)",
              "group": 1
            },
            "date_created": {
              "regex": "DATE CREATED\\s+([^\\n]+)",
              "group": 1
            },
            "cost": {
              "regex": "COST\\s+([\\d\\.]+)",
              "group": 1,
              "transform": "number"
            },
            "size": {
              "regex": "SIZE\\s+(\\d+)",
              "group": 1,
              "transform": "number"
            },
            "region": {
              "regex": "REGION\\s+([^\\n]+)",
              "group": 1
            },
            "attached_to_id": {
              "regex": "ATTACHED TO ID\\s+([^\\n]+)",
              "group": 1,
              "optional": true
            }
          }
        }
      },
      "list_block_volumes": {
        "target": {
          "Command": "vultr-cli block-storage list"
        },
        "params": [],
        "parse_rules": {
          "type": "array",
          "separator": "\\n",
          "patterns": {
            "id": {
              "regex": "^([a-f0-9-]+)\\s+",
              "group": 1
            },
            "date_created": {
              "regex": "^[a-f0-9-]+\\s+([^\\s]+\\s+[^\\s]+)\\s+",
              "group": 1
            },
            "cost": {
              "regex": "^[a-f0-9-]+\\s+[^\\s]+\\s+[^\\s]+\\s+([\\d\\.]+)\\s+",
              "group": 1,
              "transform": "number"
            },
            "size": {
              "regex": "^[a-f0-9-]+\\s+[^\\s]+\\s+[^\\s]+\\s+[\\d\\.]+\\s+(\\d+)\\s+",
              "group": 1,
              "transform": "number"
            },
            "region": {
              "regex": "^[a-f0-9-]+\\s+[^\\s]+\\s+[^\\s]+\\s+[\\d\\.]+\\s+\\d+\\s+([^\\s]+)\\s+",
              "group": 1
            },
            "attached_to_id": {
              "regex": "^[a-f0-9-]+\\s+[^\\s]+\\s+[^\\s]+\\s+[\\d\\.]+\\s+\\d+\\s+[^\\s]+\\s+([^\\s]+)",
              "group": 1,
              "optional": true
            }
          }
        }
      },
      "attach_block_volume": {
        "target": {
          "Command": "vultr-cli block-storage attach {block_id} --instance-id {instance_id}"
        },
        "params": [
          "block_id",
          "instance_id"
        ],
        "parse_rules": {
          "type": "object",
          "patterns": {
            "success": {
              "regex": ".*",
              "transform": "boolean"
            }
          }
        }
      },
      "detach_block_volume": {
        "target": {
          "Command": "vultr-cli block-storage detach {block_id}"
        },
        "params": [
          "block_id"
        ],
        "parse_rules": {
          "type": "object",
          "patterns": {
            "success": {
              "regex": ".*",
              "transform": "boolean"
            }
          }
        }
      },
      "delete_block_volume": {
        "target": {
          "Command": "vultr-cli block-storage delete {block_id}"
        },
        "params": [
          "block_id"
        ],
        "parse_rules": {
          "type": "object",
          "patterns": {
            "success": {
              "regex": ".*",
              "transform": "boolean"
            }
          }
        }
      },
      "create_firewall_group": {
        "target": {
          "Command": "vultr-cli firewall-group create {description_param}"
        },
        "params": [
          "description_param"
        ],
        "parse_rules": {
          "type": "properties",
          "patterns": {
            "id": {
              "regex": "ID\\s+([a-f0-9-]+)",
              "group": 1
            },
            "description": {
              "regex": "DESCRIPTION\\s+([^\\n]+)",
              "group": 1,
              "optional": true
            },
            "date_created": {
              "regex": "DATE CREATED\\s+([^\\n]+)",
              "group": 1
            },
            "date_modified": {
              "regex": "DATE MODIFIED\\s+([^\\n]+)",
              "group": 1
            }
          }
        }
      },
      "add_firewall_rule": {
        "target": {
          "Command": "vultr-cli firewall-rule create {firewall_group_id} --protocol {protocol} --port {port} --ip-type {ip_type} --source {source} --notes {notes}"
        },
        "params": [
          "firewall_group_id",
          "protocol",
          "port",
          "ip_type",
          "source",
          "notes"
        ],
        "parse_rules": {
          "type": "properties",
          "patterns": {
            "id": {
              "regex": "ID\\s+(\\d+)",
              "group": 1,
              "transform": "number"
            },
            "protocol": {
              "regex": "PROTOCOL\\s+([^\\n]+)",
              "group": 1
            },
            "port": {
              "regex": "PORT\\s+([^\\n]+)",
              "group": 1
            },
            "source": {
              "regex": "SOURCE\\s+([^\\n]+)",
              "group": 1
            }
          }
        }
      }
    }
  }