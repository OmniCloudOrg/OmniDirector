{
  "name": "linode",
  "type": "command",
  "default_settings": {
    "region": "us-east",
    "type": "g6-standard-1",
    "image": "linode/ubuntu20.04",
    "root_pass": "auto-generate",
    "authorized_keys": [],
    "backups_enabled": "false",
    "private_ip": "true",
    "tags": []
  },
  "actions": {
    "test_install": {
      "target": {
        "Command": {
          "command": "linode-cli --version",
          "in_vm": false
        }
      },
      "params": [],
      "parse_rules": {
        "type": "object",
        "patterns": {
          "version": {
            "regex": "linode-cli ([\\d\\.]+)",
            "group": 1
          }
        }
      }
    },
    "list_workers": {
      "target": {
        "Command": {
          "command": "linode-cli linodes list --format 'id,label,region,type,status,ipv4' --no-headers",
          "in_vm": false
        }
      },
      "params": [],
      "parse_rules": {
        "type": "array",
        "separator": "\\n",
        "patterns": {
          "id": {
            "regex": "^(\\d+)",
            "group": 1,
            "transform": "number"
          },
          "label": {
            "regex": "^\\d+\\s+([^\\s]+)",
            "group": 1
          },
          "region": {
            "regex": "^\\d+\\s+[^\\s]+\\s+([^\\s]+)",
            "group": 1
          },
          "type": {
            "regex": "^\\d+\\s+[^\\s]+\\s+[^\\s]+\\s+([^\\s]+)",
            "group": 1
          },
          "status": {
            "regex": "^\\d+\\s+[^\\s]+\\s+[^\\s]+\\s+[^\\s]+\\s+([^\\s]+)",
            "group": 1
          },
          "ipv4": {
            "regex": "^\\d+\\s+[^\\s]+\\s+[^\\s]+\\s+[^\\s]+\\s+[^\\s]+\\s+([^\\s]+)",
            "group": 1
          }
        }
      }
    },
    "create_worker": {
      "target": {
        "Command": {
          "command": "linode-cli linodes create --label {label} --region {region} --type {type} --image {image} --root_pass {root_pass} --backups_enabled {backups_enabled} --private_ip {private_ip} --tags {tags} --format 'id,label,ipv4' --no-headers",
          "in_vm": false
        }
      },
      "params": [
        "label",
        "region",
        "type",
        "image",
        "root_pass",
        "backups_enabled",
        "private_ip",
        "tags"
      ],
      "parse_rules": {
        "type": "object",
        "patterns": {
          "id": {
            "regex": "^(\\d+)",
            "group": 1,
            "transform": "number"
          },
          "label": {
            "regex": "^\\d+\\s+([^\\s]+)",
            "group": 1
          },
          "ipv4": {
            "regex": "^\\d+\\s+[^\\s]+\\s+([^\\s]+)",
            "group": 1
          }
        }
      }
    },
    "delete_worker": {
      "target": {
        "Command": {
          "command": "linode-cli linodes delete {linode_id}",
          "in_vm": false
        }
      },
      "params": [
        "linode_id"
      ],
      "parse_rules": {
        "type": "object",
        "patterns": {
          "success": {
            "regex": ".*",
            "transform": "boolean"
          }
        }
      }
    },
    "get_worker": {
      "target": {
        "Command": {
          "command": "linode-cli linodes view {linode_id}",
          "in_vm": false
        }
      },
      "params": [
        "linode_id"
      ],
      "parse_rules": {
        "type": "properties",
        "patterns": {
          "id": {
            "regex": "\"id\": (\\d+)",
            "group": 1,
            "transform": "number"
          },
          "label": {
            "regex": "\"label\": \"([^\"]+)\"",
            "group": 1
          },
          "region": {
            "regex": "\"region\": \"([^\"]+)\"",
            "group": 1
          },
          "type": {
            "regex": "\"type\": \"([^\"]+)\"",
            "group": 1
          },
          "status": {
            "regex": "\"status\": \"([^\"]+)\"",
            "group": 1
          },
          "ipv4": {
            "regex": "\"ipv4\": \\[\"([^\"]+)\"",
            "group": 1
          },
          "ipv6": {
            "regex": "\"ipv6\": \"([^\"]+)\"",
            "group": 1
          },
          "memory": {
            "regex": "\"specs\": \\{[^}]*\"memory\": (\\d+)",
            "group": 1,
            "transform": "number"
          },
          "disk": {
            "regex": "\"specs\": \\{[^}]*\"disk\": (\\d+)",
            "group": 1,
            "transform": "number"
          },
          "vcpus": {
            "regex": "\"specs\": \\{[^}]*\"vcpus\": (\\d+)",
            "group": 1,
            "transform": "number"
          }
        }
      }
    },
    "boot_worker": {
      "target": {
        "Command": {
          "command": "linode-cli linodes boot {linode_id}",
          "in_vm": false
        }
      },
      "params": [
        "linode_id"
      ],
      "parse_rules": {
        "type": "object",
        "patterns": {
          "success": {
            "regex": ".*",
            "transform": "boolean"
          }
        }
      }
    },
    "reboot_worker": {
      "target": {
        "Command": {
          "command": "linode-cli linodes reboot {linode_id}",
          "in_vm": false
        }
      },
      "params": [
        "linode_id"
      ],
      "parse_rules": {
        "type": "object",
        "patterns": {
          "success": {
            "regex": ".*",
            "transform": "boolean"
          }
        }
      }
    },
    "shutdown_worker": {
      "target": {
        "Command": {
          "command": "linode-cli linodes shutdown {linode_id}",
          "in_vm": false
        }
      },
      "params": [
        "linode_id"
      ],
      "parse_rules": {
        "type": "object",
        "patterns": {
          "success": {
            "regex": ".*",
            "transform": "boolean"
          }
        }
      }
    },
    "resize_worker": {
      "target": {
        "Command": {
          "command": "linode-cli linodes resize {linode_id} --type {new_type}",
          "in_vm": false
        }
      },
      "params": [
        "linode_id",
        "new_type"
      ],
      "parse_rules": {
        "type": "object",
        "patterns": {
          "success": {
            "regex": ".*",
            "transform": "boolean"
          }
        }
      }
    },
    "list_worker_volumes": {
      "target": {
        "Command": {
          "command": "linode-cli linodes disks-list {linode_id} --format 'id,label,size,filesystem' --no-headers",
          "in_vm": false
        }
      },
      "params": [
        "linode_id"
      ],
      "parse_rules": {
        "type": "array",
        "separator": "\\n",
        "patterns": {
          "id": {
            "regex": "^(\\d+)",
            "group": 1,
            "transform": "number"
          },
          "label": {
            "regex": "^\\d+\\s+([^\\s]+)",
            "group": 1
          },
          "size": {
            "regex": "^\\d+\\s+[^\\s]+\\s+(\\d+)",
            "group": 1,
            "transform": "number"
          },
          "filesystem": {
            "regex": "^\\d+\\s+[^\\s]+\\s+\\d+\\s+([^\\s]+)",
            "group": 1
          }
        }
      }
    },
    "create_volume": {
      "target": {
        "Command": {
          "command": "linode-cli linodes disk-create {linode_id} --label {disk_label} --size {size_mb} --filesystem {filesystem}",
          "in_vm": false
        }
      },
      "params": [
        "linode_id",
        "disk_label",
        "size_mb",
        "filesystem"
      ],
      "parse_rules": {
        "type": "object",
        "patterns": {
          "id": {
            "regex": "\"id\": (\\d+)",
            "group": 1,
            "transform": "number"
          },
          "label": {
            "regex": "\"label\": \"([^\"]+)\"",
            "group": 1
          },
          "size": {
            "regex": "\"size\": (\\d+)",
            "group": 1,
            "transform": "number"
          }
        }
      }
    },
    "delete_volume": {
      "target": {
        "Command": {
          "command": "linode-cli linodes disk-delete {linode_id} {disk_id}",
          "in_vm": false
        }
      },
      "params": [
        "linode_id",
        "disk_id"
      ],
      "parse_rules": {
        "type": "object",
        "patterns": {
          "success": {
            "regex": ".*",
            "transform": "boolean"
          }
        }
      }
    },
    "resize_volume": {
      "target": {
        "Command": {
          "command": "linode-cli linodes disk-resize {linode_id} {disk_id} --size {new_size_mb}",
          "in_vm": false
        }
      },
      "params": [
        "linode_id",
        "disk_id",
        "new_size_mb"
      ],
      "parse_rules": {
        "type": "object",
        "patterns": {
          "success": {
            "regex": ".*",
            "transform": "boolean"
          }
        }
      }
    },
    "create_snapshot": {
      "target": {
        "Command": {
          "command": "linode-cli linodes snapshot-create {linode_id} --label {snapshot_label}",
          "in_vm": false
        }
      },
      "params": [
        "linode_id",
        "snapshot_label"
      ],
      "parse_rules": {
        "type": "object",
        "patterns": {
          "id": {
            "regex": "\"id\": \"([^\"]+)\"",
            "group": 1
          },
          "label": {
            "regex": "\"label\": \"([^\"]+)\"",
            "group": 1
          },
          "created": {
            "regex": "\"created\": \"([^\"]+)\"",
            "group": 1
          }
        }
      }
    },
    "list_snapshots": {
      "target": {
        "Command": {
          "command": "linode-cli images list --is_public false --format 'id,label,created,size,linode_id' --no-headers",
          "in_vm": false
        }
      },
      "params": [],
      "parse_rules": {
        "type": "array",
        "separator": "\\n",
        "patterns": {
          "id": {
            "regex": "^([^\\s]+)",
            "group": 1
          },
          "label": {
            "regex": "^[^\\s]+\\s+([^\\s]+)",
            "group": 1
          },
          "created": {
            "regex": "^[^\\s]+\\s+[^\\s]+\\s+([^\\s]+\\s+[^\\s]+)",
            "group": 1
          },
          "size": {
            "regex": "^[^\\s]+\\s+[^\\s]+\\s+[^\\s]+\\s+[^\\s]+\\s+(\\d+)",
            "group": 1,
            "transform": "number"
          },
          "linode_id": {
            "regex": "^[^\\s]+\\s+[^\\s]+\\s+[^\\s]+\\s+[^\\s]+\\s+\\d+\\s+(\\d+)",
            "group": 1,
            "transform": "number"
          }
        }
      }
    },
    "delete_snapshot": {
      "target": {
        "Command": {
          "command": "linode-cli images delete {image_id}",
          "in_vm": false
        }
      },
      "params": [
        "image_id"
      ],
      "parse_rules": {
        "type": "object",
        "patterns": {
          "success": {
            "regex": ".*",
            "transform": "boolean"
          }
        }
      }
    },
    "list_regions": {
      "target": {
        "Command": {
          "command": "linode-cli regions list --format 'id,country' --no-headers",
          "in_vm": false
        }
      },
      "params": [],
      "parse_rules": {
        "type": "array",
        "separator": "\\n",
        "patterns": {
          "id": {
            "regex": "^([^\\s]+)",
            "group": 1
          },
          "country": {
            "regex": "^[^\\s]+\\s+([^\\s]+)",
            "group": 1
          }
        }
      }
    },
    "list_worker_types": {
      "target": {
        "Command": {
          "command": "linode-cli linodes types --format 'id,label,vcpus,memory,disk,price_monthly' --no-headers",
          "in_vm": false
        }
      },
      "params": [],
      "parse_rules": {
        "type": "array",
        "separator": "\\n",
        "patterns": {
          "id": {
            "regex": "^([^\\s]+)",
            "group": 1
          },
          "label": {
            "regex": "^[^\\s]+\\s+([^\\s]+)",
            "group": 1
          },
          "vcpus": {
            "regex": "^[^\\s]+\\s+[^\\s]+\\s+(\\d+)",
            "group": 1,
            "transform": "number"
          },
          "memory": {
            "regex": "^[^\\s]+\\s+[^\\s]+\\s+\\d+\\s+(\\d+)",
            "group": 1,
            "transform": "number"
          },
          "disk": {
            "regex": "^[^\\s]+\\s+[^\\s]+\\s+\\d+\\s+\\d+\\s+(\\d+)",
            "group": 1,
            "transform": "number"
          },
          "price_monthly": {
            "regex": "^[^\\s]+\\s+[^\\s]+\\s+\\d+\\s+\\d+\\s+\\d+\\s+([\\d\\.]+)",
            "group": 1,
            "transform": "number"
          }
        }
      }
    },
    "list_images": {
      "target": {
        "Command": {
          "command": "linode-cli images list --is_public true --format 'id,label,size,created,description' --no-headers",
          "in_vm": false
        }
      },
      "params": [],
      "parse_rules": {
        "type": "array",
        "separator": "\\n",
        "patterns": {
          "id": {
            "regex": "^([^\\s]+)",
            "group": 1
          },
          "label": {
            "regex": "^[^\\s]+\\s+([^\\s]+)",
            "group": 1
          },
          "size": {
            "regex": "^[^\\s]+\\s+[^\\s]+\\s+(\\d+)",
            "group": 1,
            "transform": "number"
          },
          "created": {
            "regex": "^[^\\s]+\\s+[^\\s]+\\s+\\d+\\s+([^\\s]+\\s+[^\\s]+)",
            "group": 1
          },
          "description": {
            "regex": "^[^\\s]+\\s+[^\\s]+\\s+\\d+\\s+[^\\s]+\\s+[^\\s]+\\s+(.+)",
            "group": 1
          }
        }
      }
    }
  }
}