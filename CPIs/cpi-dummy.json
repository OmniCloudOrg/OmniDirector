{
    "name": "dummy",
    "type": "command",
    "default_settings": {
      "region": "dummy-region-1",
      "size": "dummy-small",
      "image": "dummy/ubuntu20.04",
      "password": "dummy-password",
      "tags": []
    },
    "actions": {
      "test_install": {
        "target": {"Command": "cmd /c \"}echo dummy-cli version 1.2.3\""},
        "params": [],
        "parse_rules": {
          "type": "object",
          "patterns": {
            "version": {
              "regex": "dummy-cli version ([\\d\\.]+)",
              "group": 1
            }
          }
        }
      },
      "list_workers": {
        "target": {"Command": "cmd /c \"}echo 1 test-vm-1 dummy-region-1 small running 192.168.1.1 & echo 2 test-vm-2 dummy-region-2 medium stopped 192.168.1.2\""},
        "params": [],
        "parse_rules": {
          "type": "array",
          "separator": "\\n",
          "patterns": {
            "id": {
              "regex": "^(\\d+)",
              "group": 1,
              "transform": "number"
            },
            "label": {
              "regex": "^\\d+\\s+([^\\s]+)",
              "group": 1
            },
            "region": {
              "regex": "^\\d+\\s+[^\\s]+\\s+([^\\s]+)",
              "group": 1
            },
            "size": {
              "regex": "^\\d+\\s+[^\\s]+\\s+[^\\s]+\\s+([^\\s]+)",
              "group": 1
            },
            "status": {
              "regex": "^\\d+\\s+[^\\s]+\\s+[^\\s]+\\s+[^\\s]+\\s+([^\\s]+)",
              "group": 1
            },
            "ip": {
              "regex": "^\\d+\\s+[^\\s]+\\s+[^\\s]+\\s+[^\\s]+\\s+[^\\s]+\\s+([^\\s]+)",
              "group": 1
            }
          }
        }
      },
      "create_worker": {
        "target": {"Command": "cmd /c \"}echo 3 {label} 192.168.1.3\""},
        "params": [
          "label",
          "region",
          "size",
          "image",
          "password"
        ],
        "parse_rules": {
          "type": "object",
          "patterns": {
            "id": {
              "regex": "^(\\d+)",
              "group": 1,
              "transform": "number"
            },
            "label": {
              "regex": "^\\d+\\s+([^\\s]+)",
              "group": 1
            },
            "ip": {
              "regex": "^\\d+\\s+[^\\s]+\\s+([^\\s]+)",
              "group": 1
            }
          }
        }
      },
      "delete_worker": {
        "target": {"Command": "cmd /c \"}echo Instance {instance_id} deleted successfully\""},
        "params": [
          "instance_id"
        ],
        "parse_rules": {
          "type": "object",
          "patterns": {
            "success": {
              "regex": ".*",
              "transform": "boolean"
            }
          }
        }
      },
      "get_worker": {
        "target": {"Command": "cmd /c \"}echo {\\\"id\\\": {instance_id}, \\\"label\\\": \\\"test-vm-{instance_id}\\\", \\\"region\\\": \\\"dummy-region-1\\\", \\\"type\\\": \\\"small\\\", \\\"status\\\": \\\"running\\\", \\\"ipv4\\\": [\\\"192.168.1.{instance_id}\\\"], \\\"ipv6\\\": \\\"fe80::{instance_id}\\\", \\\"specs\\\": {\\\"memory\\\": 1024, \\\"disk\\\": 25600, \\\"vcpus\\\": 1}}\""},
        "params": [
          "instance_id"
        ],
        "parse_rules": {
          "type": "properties",
          "patterns": {
            "id": {
              "regex": "\"id\": (\\d+)",
              "group": 1,
              "transform": "number"
            },
            "label": {
              "regex": "\"label\": \"([^\"]+)\"",
              "group": 1
            },
            "region": {
              "regex": "\"region\": \"([^\"]+)\"",
              "group": 1
            },
            "type": {
              "regex": "\"type\": \"([^\"]+)\"",
              "group": 1
            },
            "status": {
              "regex": "\"status\": \"([^\"]+)\"",
              "group": 1
            },
            "ipv4": {
              "regex": "\"ipv4\": \\[\"([^\"]+)\"",
              "group": 1
            },
            "ipv6": {
              "regex": "\"ipv6\": \"([^\"]+)\"",
              "group": 1
            },
            "memory": {
              "regex": "\"specs\": \\{[^}]*\"memory\": (\\d+)",
              "group": 1,
              "transform": "number"
            },
            "disk": {
              "regex": "\"specs\": \\{[^}]*\"disk\": (\\d+)",
              "group": 1,
              "transform": "number"
            },
            "vcpus": {
              "regex": "\"specs\": \\{[^}]*\"vcpus\": (\\d+)",
              "group": 1,
              "transform": "number"
            }
          }
        }
      },
      "boot_worker": {
        "target": {"Command": "cmd /c \"}echo Instance {instance_id} booted successfully\""},
        "params": [
          "instance_id"
        ],
        "parse_rules": {
          "type": "object",
          "patterns": {
            "success": {
              "regex": ".*",
              "transform": "boolean"
            }
          }
        }
      },
      "reboot_worker": {
        "target": {"Command": "cmd /c \"}echo Instance {instance_id} rebooted successfully\""},
        "params": [
          "instance_id"
        ],
        "parse_rules": {
          "type": "object",
          "patterns": {
            "success": {
              "regex": ".*",
              "transform": "boolean"
            }
          }
        }
      },
      "shutdown_worker": {
        "target": {"Command": "cmd /c \"}echo Instance {instance_id} shutdown successfully\""},
        "params": [
          "instance_id"
        ],
        "parse_rules": {
          "type": "object",
          "patterns": {
            "success": {
              "regex": ".*",
              "transform": "boolean"
            }
          }
        }
      },
      "list_volumes": {
        "target": {"Command": "cmd /c \"}echo 1 system-disk 10240 ext4 & echo 2 data-disk 15360 ext4\""},
        "params": [
          "instance_id"
        ],
        "parse_rules": {
          "type": "array",
          "separator": "\\n",
          "patterns": {
            "id": {
              "regex": "^(\\d+)",
              "group": 1,
              "transform": "number"
            },
            "label": {
              "regex": "^\\d+\\s+([^\\s]+)",
              "group": 1
            },
            "size": {
              "regex": "^\\d+\\s+[^\\s]+\\s+(\\d+)",
              "group": 1,
              "transform": "number"
            },
            "filesystem": {
              "regex": "^\\d+\\s+[^\\s]+\\s+\\d+\\s+([^\\s]+)",
              "group": 1
            }
          }
        }
      },
      "create_volume": {
        "target": {"Command": "cmd /c \"}echo {\\\"id\\\": 3, \\\"label\\\": \\\"{disk_label}\\\", \\\"size\\\": {size_mb}}\""},
        "params": [
          "instance_id",
          "disk_label",
          "size_mb",
          "filesystem"
        ],
        "parse_rules": {
          "type": "object",
          "patterns": {
            "id": {
              "regex": "\"id\": (\\d+)",
              "group": 1,
              "transform": "number"
            },
            "label": {
              "regex": "\"label\": \"([^\"]+)\"",
              "group": 1
            },
            "size": {
              "regex": "\"size\": (\\d+)",
              "group": 1,
              "transform": "number"
            }
          }
        }
      },
      "delete_volume": {
        "target": {"Command": "cmd /c \"}echo Disk {disk_id} deleted successfully\""},
        "params": [
          "instance_id",
          "disk_id"
        ],
        "parse_rules": {
          "type": "object",
          "patterns": {
            "success": {
              "regex": ".*",
              "transform": "boolean"
            }
          }
        }
      },
      "create_snapshot": {
        "target": {"Command": "cmd /c \"}echo {\\\"id\\\": \\\"snap-123\\\", \\\"label\\\": \\\"{snapshot_label}\\\", \\\"created\\\": \\\"2025-03-17T12:00:00\\\"}\""},
        "params": [
          "instance_id",
          "snapshot_label"
        ],
        "parse_rules": {
          "type": "properties",
          "patterns": {
            "id": {
              "regex": "\"id\": \"([^\"]+)\"",
              "group": 1
            },
            "label": {
              "regex": "\"label\": \"([^\"]+)\"",
              "group": 1
            },
            "created": {
              "regex": "\"created\": \"([^\"]+)\"",
              "group": 1
            }
          }
        }
      },
      "list_snapshots": {
        "target": {"Command": "cmd /c \"}echo snap-123 backup-1 2025-03-15 12:00:00 5120 1 & echo snap-456 backup-2 2025-03-16 12:00:00 5120 2\""},
        "params": [],
        "parse_rules": {
          "type": "array",
          "separator": "\\n",
          "patterns": {
            "id": {
              "regex": "^([^\\s]+)",
              "group": 1
            },
            "label": {
              "regex": "^[^\\s]+\\s+([^\\s]+)",
              "group": 1
            },
            "created": {
              "regex": "^[^\\s]+\\s+[^\\s]+\\s+([^\\s]+\\s+[^\\s]+)",
              "group": 1
            },
            "size": {
              "regex": "^[^\\s]+\\s+[^\\s]+\\s+[^\\s]+\\s+[^\\s]+\\s+(\\d+)",
              "group": 1,
              "transform": "number"
            },
            "instance_id": {
              "regex": "^[^\\s]+\\s+[^\\s]+\\s+[^\\s]+\\s+[^\\s]+\\s+\\d+\\s+(\\d+)",
              "group": 1,
              "transform": "number"
            }
          }
        }
      },
      "delete_snapshot": {
        "target": {"Command": "cmd /c \"}echo Snapshot {snapshot_id} deleted successfully\""},
        "params": [
          "snapshot_id"
        ],
        "parse_rules": {
          "type": "object",
          "patterns": {
            "success": {
              "regex": ".*",
              "transform": "boolean"
            }
          }
        }
      },
      "list_regions": {
        "target": {"Command": "cmd /c \"}echo dummy-region-1 US & echo dummy-region-2 EU & echo dummy-region-3 AP\""},
        "params": [],
        "parse_rules": {
          "type": "array",
          "separator": "\\n",
          "patterns": {
            "id": {
              "regex": "^([^\\s]+)",
              "group": 1
            },
            "country": {
              "regex": "^[^\\s]+\\s+([^\\s]+)",
              "group": 1
            }
          }
        }
      },
      "list_sizes": {
        "target": {"Command": "cmd /c \"}echo dummy-small Basic 1 1024 25600 10.00 & echo dummy-medium Standard 2 2048 51200 20.00 & echo dummy-large Premium 4 4096 102400 40.00\""},
        "params": [],
        "parse_rules": {
          "type": "array",
          "separator": "\\n",
          "patterns": {
            "id": {
              "regex": "^([^\\s]+)",
              "group": 1
            },
            "label": {
              "regex": "^[^\\s]+\\s+([^\\s]+)",
              "group": 1
            },
            "vcpus": {
              "regex": "^[^\\s]+\\s+[^\\s]+\\s+(\\d+)",
              "group": 1,
              "transform": "number"
            },
            "memory": {
              "regex": "^[^\\s]+\\s+[^\\s]+\\s+\\d+\\s+(\\d+)",
              "group": 1,
              "transform": "number"
            },
            "disk": {
              "regex": "^[^\\s]+\\s+[^\\s]+\\s+\\d+\\s+\\d+\\s+(\\d+)",
              "group": 1,
              "transform": "number"
            },
            "price": {
              "regex": "^[^\\s]+\\s+[^\\s]+\\s+\\d+\\s+\\d+\\s+\\d+\\s+([\\d\\.]+)",
              "group": 1,
              "transform": "number"
            }
          }
        }
      },
      "list_images": {
        "target": {"Command": "cmd /c \"}echo dummy/ubuntu20.04 ubuntu-20.04 5120 2025-01-01 12:00:00 Ubuntu 20.04 LTS & echo dummy/debian11 debian-11 4096 2025-01-01 12:00:00 Debian 11 & echo dummy/centos8 centos-8 4096 2025-01-01 12:00:00 CentOS 8\""},
        "params": [],
        "parse_rules": {
          "type": "array",
          "separator": "\\n",
          "patterns": {
            "id": {
              "regex": "^([^\\s]+)",
              "group": 1
            },
            "label": {
              "regex": "^[^\\s]+\\s+([^\\s]+)",
              "group": 1
            },
            "size": {
              "regex": "^[^\\s]+\\s+[^\\s]+\\s+(\\d+)",
              "group": 1,
              "transform": "number"
            },
            "created": {
              "regex": "^[^\\s]+\\s+[^\\s]+\\s+\\d+\\s+([^\\s]+\\s+[^\\s]+)",
              "group": 1
            },
            "description": {
              "regex": "^[^\\s]+\\s+[^\\s]+\\s+\\d+\\s+[^\\s]+\\s+[^\\s]+\\s+(.+)",
              "group": 1
            }
          }
        }
      },
      "direct_target": {
        "target": {"Command": "{target}"},
        "params": [
          "target"
        ],
        "parse_rules": {
          "type": "object",
          "patterns": {
            "output": {
              "regex": "(.*)",
              "group": 1
            }
          }
        }
      },
      "direct_target_json": {
        "target": {"Command": "{target}"},
        "params": [
          "target"
        ],
        "parse_rules": {
          "type": "properties",
          "patterns": {
            "raw_json": {
              "regex": "(.*)",
              "group": 1
            }
          }
        }
      },
      "get_dummy_error": {
        "target": {"Command": "cmd /c \"}echo ERROR: This is a simulated error & exit /b 1\""},
        "params": [],
        "parse_rules": {
          "type": "object",
          "patterns": {
            "error": {
              "regex": "ERROR: (.+)",
              "group": 1
            }
          }
        }
      },
      "get_dummy_malformed": {
        "target": {"Command": "cmd /c \"}echo This output does not match any expected format\""},
        "params": [],
        "parse_rules": {
          "type": "object",
          "patterns": {
            "id": {
              "regex": "ID: (\\d+)",
              "group": 1,
              "transform": "number"
            }
          }
        }
      }
    }
  }