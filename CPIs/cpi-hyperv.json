{
    "name": "hyperv",
    "type": "command",
    "default_settings": {
        "hostname": "localhost",
        "output_format": "json"
    },
    "actions": {
        "test_install": {
            "target": {
                "Command": "powershell -Command \"Get-Command Get-VM -ErrorAction SilentlyContinue | Select-Object -ExpandProperty Version | ConvertTo-Json\""
            },
            "parse_rules": {
                "type": "object",
                "patterns": {
                    "version": {
                        "regex": "(.*)",
                        "group": 1
                    }
                }
            }
        },
        "list_workers": {
            "target": {
                "Command": "powershell -Command \"Get-VM | Select-Object Name, State, CPUUsage, MemoryAssigned, Uptime, Status, Version, Path, Id | ConvertTo-Json -Depth 2\""
            },
            "parse_rules": {
                "type": "object",
                "patterns": {
                    "vms": {
                        "regex": "(.*)",
                        "group": 1
                    }
                }
            }
        },
        "get_worker": {
            "target": {
                "Command": "powershell -Command \"Get-VM -Name '{name}' | Select-Object Name, State, CPUUsage, MemoryAssigned, Uptime, Status, Version, Path, Id | ConvertTo-Json -Depth 2\""
            },
            "params": [
                "name"
            ],
            "parse_rules": {
                "type": "object",
                "patterns": {
                    "vm": {
                        "regex": "(.*)",
                        "group": 1
                    }
                }
            }
        },
        "create_worker": {
            "target": {
                "Command": "powershell -Command \"New-VM -Name '{name}' -MemoryStartupBytes {memory_mb}MB -Generation {generation} -Path '{path}' -NewVHDPath '{path}\\{name}\\{name}.vhdx' -NewVHDSizeBytes {disk_size_gb}GB -SwitchName '{network}' | ConvertTo-Json\""
            },
            "params": [
                "name",
                "memory_mb",
                "path",
                "disk_size_gb",
                "network"
            ],
            "default_settings": {
                "generation": "2",
                "memory_mb": "2048",
                "disk_size_gb": "40",
                "path": "C:\\VMs",
                "network": "Default Switch"
            },
            "parse_rules": {
                "type": "object",
                "patterns": {
                    "vm_id": {
                        "regex": "\"Id\":\\s*\"([^\"]+)\"",
                        "group": 1
                    }
                }
            }
        },
        "start_worker": {
            "target": {
                "Command": "powershell -Command \"Start-VM -Name '{name}' -PassThru | Select-Object Name, State | ConvertTo-Json\""
            },
            "params": [
                "name"
            ],
            "parse_rules": {
                "type": "object",
                "patterns": {
                    "result": {
                        "regex": "(.*)",
                        "group": 1
                    }
                }
            }
        },
        "stop_worker": {
            "target": {
                "Command": "powershell -Command \"Stop-VM -Name '{name}' {force_param} -PassThru | Select-Object Name, State | ConvertTo-Json\""
            },
            "params": [
                "name"
            ],
            "default_settings": {
                "force_param": ""
            },
            "parse_rules": {
                "type": "object",
                "patterns": {
                    "result": {
                        "regex": "(.*)",
                        "group": 1
                    }
                }
            }
        },
        "delete_worker": {
            "target": {
                "Command": "powershell -Command \"Remove-VM -Name '{name}' {force_param} -Confirm:$false -PassThru | Select-Object Name, Id | ConvertTo-Json\""
            },
            "params": [
                "name"
            ],
            "default_settings": {
                "force_param": ""
            },
            "parse_rules": {
                "type": "object",
                "patterns": {
                    "result": {
                        "regex": "(.*)",
                        "group": 1
                    }
                }
            }
        },
        "set_worker_memory": {
            "target": {
                "Command": "powershell -Command \"Set-VMMemory -VMName '{name}' -StartupBytes {memory_mb}MB -Priority {memory_priority} -Buffer {memory_buffer}; Get-VM -Name '{name}' | Select-Object Name, MemoryAssigned | ConvertTo-Json\""
            },
            "params": [
                "name",
                "memory_mb"
            ],
            "default_settings": {
                "memory_priority": "50",
                "memory_buffer": "20"
            },
            "parse_rules": {
                "type": "object",
                "patterns": {
                    "result": {
                        "regex": "(.*)",
                        "group": 1
                    }
                }
            }
        },
        "set_worker_cpu": {
            "target": {
                "Command": "powershell -Command \"Set-VMProcessor -VMName '{name}' -Count {vcpus} -Reserve {cpu_reserve} -Maximum {cpu_maximum} -RelativeWeight {cpu_weight}; Get-VM -Name '{name}' | Select-Object Name, ProcessorCount | ConvertTo-Json\""
            },
            "params": [
                "name",
                "vcpus"
            ],
            "default_settings": {
                "cpu_reserve": "0",
                "cpu_maximum": "100",
                "cpu_weight": "100"
            },
            "parse_rules": {
                "type": "object",
                "patterns": {
                    "result": {
                        "regex": "(.*)",
                        "group": 1
                    }
                }
            }
        },
        "list_snapshots": {
            "target": {
                "Command": "powershell -Command \"Get-VMSnapshot -VMName '{name}' | Select-Object Name, CreationTime, ParentSnapshotName, SnapshotType, Id | ConvertTo-Json\""
            },
            "params": [
                "name"
            ],
            "parse_rules": {
                "type": "object",
                "patterns": {
                    "snapshots": {
                        "regex": "(.*)",
                        "group": 1
                    }
                }
            }
        },
        "create_snapshot": {
            "target": {
                "Command": "powershell -Command \"Checkpoint-VM -Name '{name}' -SnapshotName '{snapshot_name}' -PassThru | Select-Object VMName, Name, Id | ConvertTo-Json\""
            },
            "params": [
                "name",
                "snapshot_name"
            ],
            "parse_rules": {
                "type": "object",
                "patterns": {
                    "snapshot": {
                        "regex": "(.*)",
                        "group": 1
                    }
                }
            }
        },
        "restore_snapshot": {
            "target": {
                "Command": "powershell -Command \"Restore-VMSnapshot -VMName '{name}' -Name '{snapshot_name}' -Confirm:$false -PassThru | Select-Object VMName, Name, Id | ConvertTo-Json\""
            },
            "params": [
                "name",
                "snapshot_name"
            ],
            "parse_rules": {
                "type": "object",
                "patterns": {
                    "result": {
                        "regex": "(.*)",
                        "group": 1
                    }
                }
            }
        },
        "remove_snapshot": {
            "target": {
                "Command": "powershell -Command \"Remove-VMSnapshot -VMName '{name}' -Name '{snapshot_name}' -Confirm:$false; Get-VM -Name '{name}' | Select-Object Name, Id | ConvertTo-Json\""
            },
            "params": [
                "name",
                "snapshot_name"
            ],
            "parse_rules": {
                "type": "object",
                "patterns": {
                    "result": {
                        "regex": "(.*)",
                        "group": 1
                    }
                }
            }
        },
        "list_networks": {
            "target": {
                "Command": "powershell -Command \"Get-VMSwitch | Select-Object Name, SwitchType, NetAdapterInterfaceDescription, AllowManagementOS, Id | ConvertTo-Json\""
            },
            "parse_rules": {
                "type": "object",
                "patterns": {
                    "switches": {
                        "regex": "(.*)",
                        "group": 1
                    }
                }
            }
        },
        "create_network": {
            "target": {
                "Command": "powershell -Command \"New-VMSwitch -Name '{name}' -SwitchType {switch_type} {physical_adapter_param} -AllowManagementOS {allow_management_os} -Notes '{notes}' | Select-Object Name, SwitchType, Id | ConvertTo-Json\""
            },
            "params": [
                "name",
                "switch_type"
            ],
            "default_settings": {
                "physical_adapter_param": "",
                "allow_management_os": "$true",
                "notes": "Created by CPI"
            },
            "parse_rules": {
                "type": "object",
                "patterns": {
                    "switch": {
                        "regex": "(.*)",
                        "group": 1
                    }
                }
            }
        },
        "list_disks": {
            "target": {
                "Command": "powershell -Command \"Get-VHD -Path '{path}\\*.vhdx' | Select-Object Path, VhdFormat, VhdType, Size, FileSize, FragmentationPercentage, ParentPath | ConvertTo-Json\""
            },
            "params": [
                "path"
            ],
            "default_settings": {
                "path": "C:\\VMs"
            },
            "parse_rules": {
                "type": "object",
                "patterns": {
                    "disks": {
                        "regex": "(.*)",
                        "group": 1
                    }
                }
            }
        },
        "create_disk": {
            "target": {
                "Command": "powershell -Command \"New-VHD -Path '{path}\\{disk_name}.vhdx' -SizeBytes {size_gb}GB -Dynamic:{dynamic} | Select-Object Path, VhdFormat, VhdType, Size, FileSize | ConvertTo-Json\""
            },
            "params": [
                "path",
                "disk_name",
                "size_gb"
            ],
            "default_settings": {
                "path": "C:\\VMs",
                "dynamic": "$true"
            },
            "parse_rules": {
                "type": "object",
                "patterns": {
                    "disk": {
                        "regex": "(.*)",
                        "group": 1
                    }
                }
            }
        },
        "attach_disk": {
            "target": {
                "Command": "powershell -Command \"Add-VMHardDiskDrive -VMName '{name}' -Path '{path}\\{disk_name}.vhdx' -ControllerType {controller_type} -ControllerNumber {controller_number} -ControllerLocation {controller_location}; Get-VMHardDiskDrive -VMName '{name}' | Select-Object VMName, Path, ControllerType, ControllerNumber, ControllerLocation | ConvertTo-Json\""
            },
            "params": [
                "name",
                "path",
                "disk_name"
            ],
            "default_settings": {
                "path": "C:\\VMs",
                "controller_type": "SCSI",
                "controller_number": "0",
                "controller_location": "1"
            },
            "parse_rules": {
                "type": "object",
                "patterns": {
                    "result": {
                        "regex": "(.*)",
                        "group": 1
                    }
                }
            }
        },
        "get_worker_metrics": {
            "target": {
                "Command": "powershell -Command \"Get-VM -Name '{name}' | Select-Object Name, CPUUsage, MemoryAssigned, MemoryDemand, MemoryStatus, Status, Uptime | ConvertTo-Json\""
            },
            "params": [
                "name"
            ],
            "parse_rules": {
                "type": "object",
                "patterns": {
                    "metrics": {
                        "regex": "(.*)",
                        "group": 1
                    }
                }
            }
        }
    }
}