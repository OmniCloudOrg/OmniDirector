{
    "name": "hetzner_cloud",
    "type": "command",
    "default_settings": {
      "server_type": "cx11",
      "image": "ubuntu-22.04",
      "datacenter": "nbg1-dc3",
      "location": "nbg1",
      "ssh_key": "",
      "user_data": "",
      "volumes": "",
      "networks": "",
      "firewalls": ""
    },
    "actions": {
      "test_install": {
        "target": {"Command": "hcloud version"},
        "params": [],
        "parse_rules": {
          "type": "object",
          "patterns": {
            "version": {
              "regex": "v([\\d\\.]+)",
              "group": 1
            }
          }
        }
      },
      "list_workers": {
        "target": {"Command": "hcloud server list -o noheader -o columns=id,name,status,ipv4,datacenter,type"},
        "params": [],
        "parse_rules": {
          "type": "array",
          "separator": "\\n",
          "patterns": {
            "id": {
              "regex": "^(\\d+)\\s+",
              "group": 1,
              "transform": "number"
            },
            "name": {
              "regex": "^\\d+\\s+([^\\s]+)\\s+",
              "group": 1
            },
            "status": {
              "regex": "^\\d+\\s+[^\\s]+\\s+([^\\s]+)\\s+",
              "group": 1
            },
            "ipv4": {
              "regex": "^\\d+\\s+[^\\s]+\\s+[^\\s]+\\s+([^\\s]+)\\s+",
              "group": 1
            },
            "datacenter": {
              "regex": "^\\d+\\s+[^\\s]+\\s+[^\\s]+\\s+[^\\s]+\\s+([^\\s]+)\\s+",
              "group": 1
            },
            "server_type": {
              "regex": "^\\d+\\s+[^\\s]+\\s+[^\\s]+\\s+[^\\s]+\\s+[^\\s]+\\s+([^\\s]+)",
              "group": 1
            }
          }
        }
      },
      "create_worker": {
        "target": {"Command": "hcloud server create --name {name} --type {server_type} --image {image} --datacenter {datacenter} {ssh_key_param} {user_data_param} {volume_param} {network_param} {firewall_param}"},
        "params": [
          "name",
          "server_type",
          "image",
          "datacenter",
          "ssh_key_param",
          "user_data_param",
          "volume_param",
          "network_param",
          "firewall_param"
        ],
        "parse_rules": {
          "type": "properties",
          "patterns": {
            "id": {
              "regex": "Server ([0-9]+) created",
              "group": 1,
              "transform": "number"
            },
            "ipv4": {
              "regex": "IPv4:\\s+([0-9\\.]+)",
              "group": 1
            },
            "ipv6": {
              "regex": "IPv6:\\s+([0-9a-f:]+)",
              "group": 1
            },
            "root_password": {
              "regex": "Root password:\\s+(.+)$",
              "group": 1,
              "optional": true
            }
          }
        }
      },
      "get_worker": {
        "target": {"Command": "hcloud server describe {server_id}"},
        "params": [
          "server_id"
        ],
        "parse_rules": {
          "type": "properties",
          "patterns": {
            "id": {
              "regex": "ID:\\s+(\\d+)",
              "group": 1,
              "transform": "number"
            },
            "name": {
              "regex": "Name:\\s+([^\\n]+)",
              "group": 1
            },
            "status": {
              "regex": "Status:\\s+([^\\n]+)",
              "group": 1
            },
            "created": {
              "regex": "Created:\\s+([^\\n]+)",
              "group": 1
            },
            "server_type": {
              "regex": "Server Type:\\s+([^\\n]+)",
              "group": 1
            },
            "datacenter": {
              "regex": "Datacenter:\\s+([^\\n]+)",
              "group": 1
            },
            "location": {
              "regex": "Location:\\s+([^\\n]+)",
              "group": 1
            },
            "ipv4": {
              "regex": "Public IPv4:\\s+([^\\n]+)",
              "group": 1
            },
            "ipv6": {
              "regex": "Public IPv6 Network:\\s+([^\\n]+)",
              "group": 1
            },
            "image": {
              "regex": "Image:\\s+([^\\n]+)",
              "group": 1
            }
          }
        }
      },
      "delete_worker": {
        "target": {"Command": "hcloud server delete {server_id}"},
        "params": [
          "server_id"
        ],
        "parse_rules": {
          "type": "object",
          "patterns": {
            "success": {
              "regex": "Server [0-9]+ deleted",
              "transform": "boolean"
            }
          }
        }
      },
      "start_worker": {
        "target": {"Command": "hcloud server poweron {server_id}"},
        "params": [
          "server_id"
        ],
        "parse_rules": {
          "type": "object",
          "patterns": {
            "success": {
              "regex": "Server [0-9]+ started",
              "transform": "boolean"
            }
          }
        }
      },
      "stop_worker": {
        "target": {"Command": "hcloud server poweroff {server_id}"},
        "params": [
          "server_id"
        ],
        "parse_rules": {
          "type": "object",
          "patterns": {
            "success": {
              "regex": "Server [0-9]+ stopped",
              "transform": "boolean"
            }
          }
        }
      },
      "reboot_worker": {
        "target": {"Command": "hcloud server reboot {server_id}"},
        "params": [
          "server_id"
        ],
        "parse_rules": {
          "type": "object",
          "patterns": {
            "success": {
              "regex": "Server [0-9]+ rebooted",
              "transform": "boolean"
            }
          }
        }
      },
      "list_worker_types": {
        "target": {"Command": "hcloud server-type list -o noheader"},
        "params": [],
        "parse_rules": {
          "type": "array",
          "separator": "\\n",
          "patterns": {
            "id": {
              "regex": "^(\\d+)\\s+",
              "group": 1,
              "transform": "number"
            },
            "name": {
              "regex": "^\\d+\\s+([^\\s]+)\\s+",
              "group": 1
            },
            "cores": {
              "regex": "^\\d+\\s+[^\\s]+\\s+(\\d+)\\s+",
              "group": 1,
              "transform": "number"
            },
            "memory": {
              "regex": "^\\d+\\s+[^\\s]+\\s+\\d+\\s+(\\d+)",
              "group": 1,
              "transform": "number"
            },
            "disk": {
              "regex": "^\\d+\\s+[^\\s]+\\s+\\d+\\s+\\d+\\s+(\\d+)",
              "group": 1,
              "transform": "number"
            }
          }
        }
      },
      "list_images": {
        "target": {"Command": "hcloud image list -o noheader"},
        "params": [],
        "parse_rules": {
          "type": "array",
          "separator": "\\n",
          "patterns": {
            "id": {
              "regex": "^(\\d+)\\s+",
              "group": 1,
              "transform": "number"
            },
            "type": {
              "regex": "^\\d+\\s+([^\\s]+)\\s+",
              "group": 1
            },
            "name": {
              "regex": "^\\d+\\s+[^\\s]+\\s+([^\\s]+\\S*)",
              "group": 1
            },
            "description": {
              "regex": "^\\d+\\s+[^\\s]+\\s+[^\\s]+\\s+(.+)",
              "group": 1,
              "optional": true
            }
          }
        }
      },
      "create_snapshot": {
        "target": {"Command": "hcloud server create-image --type snapshot --description {description} {server_id}"},
        "params": [
          "server_id",
          "description"
        ],
        "parse_rules": {
          "type": "properties",
          "patterns": {
            "id": {
              "regex": "Image (\\d+) created",
              "group": 1,
              "transform": "number"
            }
          }
        }
      },
      "list_snapshots": {
        "target": {"Command": "hcloud image list --type snapshot -o noheader"},
        "params": [],
        "parse_rules": {
          "type": "array",
          "separator": "\\n",
          "patterns": {
            "id": {
              "regex": "^(\\d+)\\s+",
              "group": 1,
              "transform": "number"
            },
            "type": {
              "regex": "^\\d+\\s+([^\\s]+)\\s+",
              "group": 1
            },
            "name": {
              "regex": "^\\d+\\s+[^\\s]+\\s+([^\\s]+)",
              "group": 1,
              "optional": true
            },
            "description": {
              "regex": "^\\d+\\s+[^\\s]+\\s+(?:[^\\s]+\\s+)?(.+)",
              "group": 1
            },
            "size": {
              "regex": "^\\d+\\s+[^\\s]+\\s+(?:[^\\s]+\\s+)?(?:.+\\s+)?(\\d+\\.\\d+\\s*GB)",
              "group": 1
            }
          }
        }
      },
      "delete_snapshot": {
        "target": {"Command": "hcloud image delete {snapshot_id}"},
        "params": [
          "snapshot_id"
        ],
        "parse_rules": {
          "type": "object",
          "patterns": {
            "success": {
              "regex": "Image [0-9]+ deleted",
              "transform": "boolean"
            }
          }
        }
      },
      "list_datacenters": {
        "target": {"Command": "hcloud datacenter list -o noheader"},
        "params": [],
        "parse_rules": {
          "type": "array",
          "separator": "\\n",
          "patterns": {
            "id": {
              "regex": "^(\\d+)\\s+",
              "group": 1,
              "transform": "number"
            },
            "name": {
              "regex": "^\\d+\\s+([^\\s]+)\\s+",
              "group": 1
            },
            "description": {
              "regex": "^\\d+\\s+[^\\s]+\\s+([^\\s].+?)\\s+[^\\s]+$",
              "group": 1
            },
            "location": {
              "regex": "^\\d+\\s+[^\\s]+\\s+[^\\s].+?\\s+([^\\s]+)$",
              "group": 1
            }
          }
        }
      },
      "list_locations": {
        "target": {"Command": "hcloud location list -o noheader"},
        "params": [],
        "parse_rules": {
          "type": "array",
          "separator": "\\n",
          "patterns": {
            "id": {
              "regex": "^(\\d+)\\s+",
              "group": 1,
              "transform": "number"
            },
            "name": {
              "regex": "^\\d+\\s+([^\\s]+)\\s+",
              "group": 1
            },
            "description": {
              "regex": "^\\d+\\s+[^\\s]+\\s+([^\\s]+)\\s+",
              "group": 1
            },
            "country": {
              "regex": "^\\d+\\s+[^\\s]+\\s+[^\\s]+\\s+([^\\s]+)",
              "group": 1
            }
          }
        }
      },
      "create_volume": {
        "target": {"Command": "hcloud volume create --name {name} --size {size_gb} --server {server_id} --format {format}"},
        "params": [
          "name",
          "size_gb",
          "server_id",
          "format"
        ],
        "parse_rules": {
          "type": "properties",
          "patterns": {
            "id": {
              "regex": "Volume (\\d+) created",
              "group": 1,
              "transform": "number"
            },
            "name": {
              "regex": "Name:\\s+([^\\n]+)",
              "group": 1
            },
            "size": {
              "regex": "Size:\\s+(\\d+)",
              "group": 1,
              "transform": "number"
            }
          }
        }
      }
    }
  }